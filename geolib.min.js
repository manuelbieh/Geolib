/*! geolib 1.2.8 by Manuel Bieh
* A small library to provide some basic geo functions like distance calculation,
* conversion of decimal coordinates to sexagesimal and vice versa, etc.
* WGS 84 (World Geodetic System 1984)
* 
* @author Manuel Bieh
* @url http://www.manuelbieh.com/
* @version 1.2.8
* @license LGPL 
**/
(function(e,t){var n=6378137,r=/^([0-9]{1,3})°\s*([0-9]{1,3})'\s*(([0-9]{1,3}(\.([0-9]{1,2}))?)"\s*)?([NEOSW]?)$/,i=-90,s=90,o=-180,u=180,a={decimal:{},sexagesimal:{},distance:0,measures:{m:1,km:.001,cm:100,mm:1e3,mi:1/1609.344,sm:1/1852.216,ft:100/30.48,"in":100/2.54,yd:1/.9144},getKeys:function(e){var t=e.hasOwnProperty("lat")?"lat":"latitude",n=(e.hasOwnProperty("lng")?"lng":!1)||(e.hasOwnProperty("long")?"long":!1)||"longitude",r=(e.hasOwnProperty("alt")?"alt":!1)||(e.hasOwnProperty("altitude")?"altitude":!1)||(e.hasOwnProperty("elev")?"elev":!1)||"elevation";return{latitude:t,longitude:n,elevation:r}},getDistance:function(e,t,n){var r=a.getKeys(e),i=r.latitude,s=r.longitude,o=r.elevation;n=Math.floor(n)||1;var u={},f={};u[i]=a.useDecimal(e[i]),u[s]=a.useDecimal(e[s]),f[i]=a.useDecimal(t[i]),f[s]=a.useDecimal(t[s]);var l=6378137,c=6356752.314245,h=1/298.257223563,p=(f[s]-u[s]).toRad(),d,v,m,g,y,b,w=Math.atan((1-h)*Math.tan(parseFloat(u[i]).toRad())),E=Math.atan((1-h)*Math.tan(parseFloat(f[i]).toRad())),S=Math.sin(w),x=Math.cos(w),T=Math.sin(E),N=Math.cos(E),C=p,k,L=100;do{var A=Math.sin(C),O=Math.cos(C);b=Math.sqrt(N*A*N*A+(x*T-S*N*O)*(x*T-S*N*O));if(b===0)return a.distance=0;d=S*T+x*N*O,v=Math.atan2(b,d),m=x*N*A/b,g=1-m*m,y=d-2*S*T/g,isNaN(y)&&(y=0);var M=h/16*g*(4+h*(4-3*g));k=C,C=p+(1-M)*h*m*(v+M*b*(y+M*d*(-1+2*y*y)))}while(Math.abs(C-k)>1e-12&&--L>0);if(L===0)return NaN;var _=g*(l*l-c*c)/(c*c),D=1+_/16384*(4096+_*(-768+_*(320-175*_))),P=_/1024*(256+_*(-128+_*(74-47*_))),H=P*b*(y+P/4*(d*(-1+2*y*y)-P/6*y*(-3+4*b*b)*(-3+4*y*y))),B=c*D*(v-H);B=B.toFixed(3);if(e.hasOwnProperty(o)&&t.hasOwnProperty(o)){var j=Math.abs(e[o]-t[o]);B=Math.sqrt(B*B+j*j)}return a.distance=Math.floor(Math.round(B/n)*n)},getDistanceSimple:function(e,t,r){var i=a.getKeys(e),s=i.latitude,o=i.longitude;r=Math.floor(r)||1;var u={},f={};u[s]=parseFloat(a.useDecimal(e[s])).toRad(),u[o]=parseFloat(a.useDecimal(e[o])).toRad(),f[s]=parseFloat(a.useDecimal(t[s])).toRad(),f[o]=parseFloat(a.useDecimal(t[o])).toRad();var l=Math.round(Math.acos(Math.sin(f[s])*Math.sin(u[s])+Math.cos(f[s])*Math.cos(u[s])*Math.cos(u[o]-f[o]))*n);return a.distance=Math.floor(Math.round(l/r)*r)},getCenter:function(e){if(!e.length)return!1;var t=a.getKeys(e[0]),n=t.latitude,r=t.longitude,i=function(e){return Math.max.apply(Math,e)},s=function(e){return Math.min.apply(Math,e)},o,u,f={lat:[],lng:[]};for(var l in e)f.lat.push(a.useDecimal(e[l][n])),f.lng.push(a.useDecimal(e[l][r]));var c=s(f.lat),h=s(f.lng),p=i(f.lat),d=i(f.lng);o=((c+p)/2).toFixed(6),u=((h+d)/2).toFixed(6);var v=a.convertUnit("km",a.getDistance({lat:c,lng:h},{lat:p,lng:d}));return{latitude:o,longitude:u,distance:v}},getBounds:function(e){if(!e.length)return!1;var t=a.getKeys(e[0]),n=t.latitude,r=t.longitude,i=t.elevation,s=e[0].hasOwnProperty(i),o={maxLat:0,minLat:Infinity,maxLng:0,minLng:Infinity};s&&(o.maxElev=0,o.minElev=Infinity);for(var u=0,f=e.length;u<f;++u)o.maxLat=Math.max(e[u][n],o.maxLat),o.minLat=Math.min(e[u][n],o.minLat),o.maxLng=Math.max(e[u][r],o.maxLng),o.minLng=Math.min(e[u][r],o.minLng),s&&(o.maxElev=Math.max(e[u][i],o.maxElev),o.minElev=Math.min(e[u][i],o.minElev));return o},getBoundsOfDistance:function(e,t){var r=a.getKeys(e),f=r.latitude,l=r.longitude,c={};c[f]=a.useDecimal(e[f]),c[l]=a.useDecimal(e[l]);var h=c[f].toRad(),p=c[l].toRad(),d=t/n,v=h-d,m=h+d,g=s.toRad(),y=i.toRad(),b=u.toRad(),w=o.toRad(),E,S;if(v>y&&m<g){var x=Math.asin(Math.sin(d)/Math.cos(h));E=p-x,E<w&&(E+=2*Math.PI),S=p+x,S>b&&(S-=2*Math.PI)}else v=Math.max(v,y),m=Math.min(m,g),E=w,S=b;return[{latitude:v.toDeg(),longitude:E.toDeg()},{latitude:m.toDeg(),longitude:S.toDeg()}]},isPointInside:function(e,t){var n=a.getKeys(e),r=n.latitude,i=n.longitude;for(var s=!1,o=-1,u=t.length,f=u-1;++o<u;f=o)(t[o][i]<=e[i]&&e[i]<t[f][i]||t[f][i]<=e[i]&&e[i]<t[o][i])&&e[r]<(t[f][r]-t[o][r])*(e[i]-t[o][i])/(t[f][i]-t[o][i])+t[o][r]&&(s=!s);return s},isInside:function(){return a.isPointInside.apply(a,arguments)},isPointInCircle:function(e,t,n){return a.getDistance(e,t)<n},withinRadius:function(){return a.isPointInCircle.apply(a,arguments)},getRhumbLineBearing:function(e,t){var n=a.getKeys(e),r=n.latitude,i=n.longitude,s=a.useDecimal(t[i]).toRad()-a.useDecimal(e[i]).toRad(),o=Math.log(Math.tan(a.useDecimal(t[r]).toRad()/2+Math.PI/4)/Math.tan(a.useDecimal(e[r]).toRad()/2+Math.PI/4));return Math.abs(s)>Math.PI&&(s>0?s=(2*Math.PI-s)*-1:s=2*Math.PI+s),(Math.atan2(s,o).toDeg()+360)%360},getBearing:function(e,t){var n=a.getKeys(e),r=n.latitude,i=n.longitude;t[r]=a.useDecimal(t[r]),t[i]=a.useDecimal(t[i]),e[r]=a.useDecimal(e[r]),e[i]=a.useDecimal(e[i]);var s=(Math.atan2(Math.sin(t[i].toRad()-e[i].toRad())*Math.cos(t[r].toRad()),Math.cos(e[r].toRad())*Math.sin(t[r].toRad())-Math.sin(e[r].toRad())*Math.cos(t[r].toRad())*Math.cos(t[i].toRad()-e[i].toRad())).toDeg()+360)%360;return s},getCompassDirection:function(e,t,n){var r,i;n=="circle"?i=a.getBearing(e,t):i=a.getRhumbLineBearing(e,t);switch(Math.round(i/22.5)){case 1:r={exact:"NNE",rough:"N"};break;case 2:r={exact:"NE",rough:"N"};break;case 3:r={exact:"ENE",rough:"E"};break;case 4:r={exact:"E",rough:"E"};break;case 5:r={exact:"ESE",rough:"E"};break;case 6:r={exact:"SE",rough:"E"};break;case 7:r={exact:"SSE",rough:"S"};break;case 8:r={exact:"S",rough:"S"};break;case 9:r={exact:"SSW",rough:"S"};break;case 10:r={exact:"SW",rough:"S"};break;case 11:r={exact:"WSW",rough:"W"};break;case 12:r={exact:"W",rough:"W"};break;case 13:r={exact:"WNW",rough:"W"};break;case 14:r={exact:"NW",rough:"W"};break;case 15:r={exact:"NNW",rough:"N"};break;default:r={exact:"N",rough:"N"}}return r},orderByDistance:function(e,t){var n=a.getKeys(e),r=n.latitude,i=n.longitude,s=[];for(var o in t){var u=a.getDistance(e,t[o]);s.push({key:o,latitude:t[o][r],longitude:t[o][i],distance:u})}return s.sort(function(e,t){return e.distance-t.distance})},findNearest:function(e,t,n){n=n||0;var r=a.orderByDistance(e,t);return r[n]},getPathLength:function(e){var t=0,n;for(var r=0,i=e.length;r<i;++r)n&&(t+=a.getDistance(e[r],n)),n=e[r];return t},getSpeed:function(e,t,n){var r=n&&n.unit||"km";r=="mph"?r="mi":r=="kmh"&&(r="km");var i=a.getDistance(e,t),s=t.time*1/1e3-e.time*1/1e3,o=i/s*3600,u=Math.round(o*a.measures[r]*1e4)/1e4;return u},convertUnit:function(e,t,n){if(t===0||typeof t=="undefined"){if(a.distance===0)return 0;t=a.distance}e=e||"m",n=null==n?4:n;if(typeof a.measures[e]!="undefined")return a.round(t*a.measures[e],n);throw new Error("Unknown unit for conversion.")},useDecimal:function(e){e=e.toString().replace(/\s*/,"");if(!isNaN(parseFloat(e))&&parseFloat(e).toString()==e)return parseFloat(e);if(a.isSexagesimal(e)===!0)return parseFloat(a.sexagesimal2decimal(e));throw"Unknown format."},decimal2sexagesimal:function(e){if(e in a.sexagesimal)return a.sexagesimal[e];var t=e.toString().split("."),n=Math.abs(t[0]),r=("0."+t[1])*60,i=r.toString().split(".");return r=Math.floor(r),i=(("0."+i[1])*60).toFixed(2),a.sexagesimal[e]=n+"° "+r+"' "+i+'"',a.sexagesimal[e]},sexagesimal2decimal:function(e){if(e in a.decimal)return a.decimal[e];var t=new RegExp(r),n=t.exec(e),i=0,s=0;n&&(i=parseFloat(n[2]/60),s=parseFloat(n[4]/3600)||0);var o=(parseFloat(n[1])+i+s).toFixed(8);return o=n[7]=="S"||n[7]=="W"?o*-1:o,a.decimal[e]=o,o},isSexagesimal:function(e){return r.test(e)},round:function(e,t){var n=Math.pow(10,t);return Math.round(e*n)/n}};typeof Number.prototype.toRad=="undefined"&&(Number.prototype.toRad=function(){return this*Math.PI/180}),typeof Number.prototype.toDeg=="undefined"&&(Number.prototype.toDeg=function(){return this*180/Math.PI}),e.geolib=a,typeof module!="undefined"&&(module.exports=a)})(this);